{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1enDyC6ZSN7ZCBOzgBzGpUMzACUd2LVGx","authorship_tag":"ABX9TyOEN09+L5GBwWRF329uDbVh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":[],"metadata":{"id":"oygvLa4DSdbK"}},{"cell_type":"markdown","source":[],"metadata":{"id":"a7-znGd1Sc3x"}},{"cell_type":"markdown","source":["# Nieuwe sectie"],"metadata":{"id":"IZDc57f3SmUH"}},{"cell_type":"code","source":["# pip install SPARQLWrapper\n","# import modulen\n","\n","import requests\n","import ssl\n","ssl._create_default_https_context = ssl._create_unverified_context\n","from SPARQLWrapper import SPARQLWrapper, JSON\n","import pandas as pd\n","import datetime as dt\n","\n","# definieer de huidige datum\n","current_date = dt.datetime.now().strftime(\"%Y-%m-%d\")\n","\n","# output\n","output_file_kubus = f\"/content/drive/MyDrive/Scripts en data/EGM/EGM aantal rms/EGM_mon_rmgm_h_s_{current_date}.xlsx\"\n","output_file_missend = f\"/content/drive/MyDrive/Scripts en data/EGM/EGM aantal rms/missende_rms_{current_date}.xlsx\"\n","\n","# functie om SPARQL-queryresultaten naar DataFrame te converteren\n","def sparql_to_df(query):\n","    sparql = SPARQLWrapper(endpoint_url)\n","    sparql.setQuery(query)\n","    sparql.setReturnFormat(JSON)\n","    results = sparql.query().convert()\n","    bindings = results[\"results\"][\"bindings\"]\n","    df = pd.json_normalize(bindings)\n","    return df\n","\n","# SPARQL endpoint URL\n","endpoint_url = \"https://api.linkeddata.cultureelerfgoed.nl/datasets/rce/cho/services/cho/sparql\"\n","\n","# SPARQL-query voor het verkrijgen van gegevens\n","query_rms = \"\"\"\n","PREFIX owms: <http://standaarden.overheid.nl/owms/terms/>\n","PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n","PREFIX graph: <https://linkeddata.cultureelerfgoed.nl/graph/>\n","PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n","PREFIX ceo: <https://linkeddata.cultureelerfgoed.nl/def/ceo#>\n","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n","PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n","\n","SELECT DISTINCT ?rijksmonumentnummer\n","    (REPLACE(STR(?CBSCodeGemeente), \"^0+\", \"\") AS ?CBSCodeGemeente)\n","    (REPLACE(STR(?CBSCodeGemeente_s), \"^0+\", \"\") AS ?CBSCodeGemeente_s)\n","WHERE {\n","  ?rijksmonument ceo:rijksmonumentnummer ?rijksmonumentnummer ;\n","                   ceo:heeftBasisregistratieRelatie/ceo:heeftGemeente ?gemeente .\n","\n","  # Minus monumentaard archeologisch\n","  MINUS { ?rijksmonument ceo:heeftMonumentAard <https://data.cultureelerfgoed.nl/term/id/rn/b673c8c1-5d93-496d-8f9e-89133d579d77> . }\n","\n","  # Minus status voorbeschermd\n","  MINUS { ?rijksmonument ceo:heeftJuridischeStatus <https://data.cultureelerfgoed.nl/term/id/rn/2e93edd1-098f-4f31-ae7e-72cb77f4d2ca> . }\n","\n","  # Minus status geen rijksmonument\n","  MINUS { ?rijksmonument ceo:heeftJuridischeStatus <https://data.cultureelerfgoed.nl/term/id/rn/3e79bb7c-b459-4998-a9ed-78d91d069227> . }\n","\n","  GRAPH <https://triplydb.com/koop/owms/graphs/default> {\n","    ?gemeente rdf:type <http://standaarden.overheid.nl/owms/terms/Gemeente> ;\n","              <http://standaarden.overheid.nl/owms/terms/CBSCode> ?CBSCodeGemeente .\n","\n","    OPTIONAL { ?gemeente <http://standaarden.overheid.nl/owms/terms/successor> ?successor .\n","               ?successor <http://standaarden.overheid.nl/owms/terms/CBSCode> ?CBSCodeGemeente_s . }\n","  }\n","}\n","\"\"\"\n","\n","# verkrijg de resultaten van de SPARQL-query en sla deze op in een DataFrame\n","all_dfs = []\n","offset = 0\n","limit = 10000\n","\n","while True:\n","    query_with_offset = query_rms + f\" OFFSET {offset} LIMIT {limit}\"\n","    df = sparql_to_df(query_with_offset)\n","    if df.empty:\n","        break  # Stop de lus als er geen resultaten meer zijn\n","    all_dfs.append(df)\n","    offset += limit\n","\n","query_df = pd.concat(all_dfs, ignore_index=True)\n","\n","# hernoem kolommen\n","query_df.rename(columns={'rijksmonumentnummer.value': 'rijksmonumentnummer',\n","                         'CBSCodeGemeente.value': 'CBSCodeGemeente',\n","                         'CBSCodeGemeente_s.value': 'CBSCodeGemeente_s'}, inplace=True)\n","\n","# selecteer kolommen\n","df_select = query_df[['rijksmonumentnummer', 'CBSCodeGemeente', 'CBSCodeGemeente_s']]\n","\n","# tel aantal rijksmonumenten na query\n","aantal_rms_1 = df_select['rijksmonumentnummer'].nunique()\n","print(\"Aantal rijksmonumenten na query\", aantal_rms_1)\n","\n","# lees het functielijstje in een DataFrameEGM/EGM aantal rms/rm_func.xlsx\")\n","df_functie = pd.read_excel(\"/content/drive/MyDrive/Scripts en data/EGM/EGM aantal rms/rm_func.xlsx\")\n","\n","# Maak een nieuwe DataFrame met alleen de rijen waarin 'hoofd_functie' gelijk is aan 't'\n","df_functie = df_functie[df_functie['hoofd_functie'] == 't'].copy()\n","\n","# tel aantal rijksmonumenten in lijst functie\n","aantal_rms_f = df_functie['rijksmonument_nummer'].nunique()\n","print(\"Aantal rijksmonumenten in lijst functie\", aantal_rms_f)\n","\n","def correctie_gemeentelijke_herindeling(df_select):\n","    df_select_copy = df_select.copy()\n","    for index, row in df_select_copy.iterrows():\n","        if pd.notna(row['CBSCodeGemeente_s']):\n","            df_select_copy.at[index, 'CBSCodeGemeente'] = row['CBSCodeGemeente_s']\n","    return df_select_copy\n","\n","# voer de correctie_gemeentelijke_herindeling functie uit op df_select\n","df_select = correctie_gemeentelijke_herindeling(df_select)\n","\n","# zorg ervoor dat 'rijksmonumentnummer' een string is in beide DataFrames\n","df_select['rijksmonumentnummer'] = df_select['rijksmonumentnummer'].astype(str)\n","df_functie['rijksmonument_nummer'] = df_functie['rijksmonument_nummer'].astype(str)\n","\n","# merge functies met rijksmonumenten\n","df_egm = pd.merge(df_select, df_functie, left_on=\"rijksmonumentnummer\", right_on=\"rijksmonument_nummer\", how=\"inner\")\n","\n","# maak kubus\n","df_egm.rename(columns={'CBSCodeGemeente': 'geoitem'}, inplace=True)\n","df_kubus = df_egm[['geoitem', 'dnc_alg_cah', 'dnc_alg_cas']].copy()\n","now = dt.datetime.now()\n","time = now.strftime('m' + '%m' + 'y' + '%Y')\n","df_kubus.insert(loc=0, column='period', value=time)\n","df_kubus.insert(loc=1, column='mon_rmgm_h_s', value=1)\n","df_kubus.insert(loc=1, column='geolevel', value='gemeente')\n","\n","# groepeer kubus\n","df_kubus = df_kubus.groupby(['period','geolevel', 'geoitem', 'dnc_alg_cah', 'dnc_alg_cas'], as_index=False).sum()\n","\n","# orden kubus\n","df_kubus = df_kubus[['period', 'geolevel', 'geoitem','mon_rmgm_h_s', 'dnc_alg_cah', 'dnc_alg_cas']]\n","\n","# sorteer kubus op geolevel\n","df_kubus = df_kubus.sort_values(by='geolevel')\n","\n","# tel aantal rijksmonumenten na bewerking\n","aantal_rms_2 = df_egm['rijksmonumentnummer'].nunique()\n","print(\"Aantal rijksmonumenten na bewerking\", aantal_rms_2)\n","\n","# geef het eventuele verschil in rijksmonumenten tussen query en bewerking\n","missende_rms = df_select[~df_select['rijksmonumentnummer'].isin(df_egm['rijksmonumentnummer'])]\n","\n","# opslaan naar Excel\n","missende_rms.to_excel(output_file_missend, index=False)\n","df_kubus.to_excel(output_file_kubus, index=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u-s7E36-Ql1_","executionInfo":{"status":"ok","timestamp":1712577376454,"user_tz":-120,"elapsed":23755,"user":{"displayName":"Patrick Mout","userId":"18064236677811935247"}},"outputId":"04661a65-cc6c-4245-cd3f-6217edbf68f8"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Aantal rijksmonumenten na query 61728\n","Aantal rijksmonumenten in lijst functie 67429\n","Aantal rijksmonumenten na bewerking 61725\n"]}]},{"cell_type":"code","source":["pip install SPARQLWrapper"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dpjKkCcMwUgG","executionInfo":{"status":"ok","timestamp":1712576636695,"user_tz":-120,"elapsed":8225,"user":{"displayName":"Patrick Mout","userId":"18064236677811935247"}},"outputId":"5fbbdcb3-fa0e-43ee-e7fe-771df02989f3"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting SPARQLWrapper\n","  Downloading SPARQLWrapper-2.0.0-py3-none-any.whl (28 kB)\n","Collecting rdflib>=6.1.1 (from SPARQLWrapper)\n","  Downloading rdflib-7.0.0-py3-none-any.whl (531 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m531.9/531.9 kB\u001b[0m \u001b[31m11.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting isodate<0.7.0,>=0.6.0 (from rdflib>=6.1.1->SPARQLWrapper)\n","  Downloading isodate-0.6.1-py2.py3-none-any.whl (41 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m41.7/41.7 kB\u001b[0m \u001b[31m5.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pyparsing<4,>=2.1.0 in /usr/local/lib/python3.10/dist-packages (from rdflib>=6.1.1->SPARQLWrapper) (3.1.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from isodate<0.7.0,>=0.6.0->rdflib>=6.1.1->SPARQLWrapper) (1.16.0)\n","Installing collected packages: isodate, rdflib, SPARQLWrapper\n","Successfully installed SPARQLWrapper-2.0.0 isodate-0.6.1 rdflib-7.0.0\n"]}]},{"cell_type":"code","source":["pip install SPARQLWrapper"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kvh3EpG3RHTX","executionInfo":{"status":"ok","timestamp":1711640751945,"user_tz":-60,"elapsed":9252,"user":{"displayName":"Patrick Mout","userId":"18064236677811935247"}},"outputId":"2fba27b5-b90a-4b2a-f1f0-44a41c7947d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting SPARQLWrapper\n","  Downloading SPARQLWrapper-2.0.0-py3-none-any.whl (28 kB)\n","Collecting rdflib>=6.1.1 (from SPARQLWrapper)\n","  Downloading rdflib-7.0.0-py3-none-any.whl (531 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m531.9/531.9 kB\u001b[0m \u001b[31m13.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting isodate<0.7.0,>=0.6.0 (from rdflib>=6.1.1->SPARQLWrapper)\n","  Downloading isodate-0.6.1-py2.py3-none-any.whl (41 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m41.7/41.7 kB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pyparsing<4,>=2.1.0 in /usr/local/lib/python3.10/dist-packages (from rdflib>=6.1.1->SPARQLWrapper) (3.1.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from isodate<0.7.0,>=0.6.0->rdflib>=6.1.1->SPARQLWrapper) (1.16.0)\n","Installing collected packages: isodate, rdflib, SPARQLWrapper\n","Successfully installed SPARQLWrapper-2.0.0 isodate-0.6.1 rdflib-7.0.0\n"]}]}]}